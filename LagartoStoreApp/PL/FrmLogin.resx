<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEhIAAAEAIACABQAAFgAAACgAAAASAAAAJAAAAAEAIAAAAAAAEAUAAAAAAAAAAAAAAAAAAAAA
        AAA4ij4ANZFEADyBNQA3iDwANoo9ADWLPgA0iz4ANIo9ADWKPQA0iz4AMog6ADCFNAAwhDMAJ4UwADOB
        MmkzgDGrNn8yOzOAMQA4iT0ANI5CAEB7MQA3iTwANYs+ADSMPwAyjUAAAPigABW0YQAwkEIAMYs8AC6H
        NQATkjUALoQy3C+CMf80fzGDM38w8zaAMzlFeC8AM5BDADWNQAA2ij4ANYw/ADKOQQA4hDcvNIk8qTKK
        PP9HaR0UMIw9ACWOOQAshzTCKocz/zl+MTQbgykAM4AxvTSAMoI0jkIAM5JFADKTRgAzkEMANI1AAC6S
        RAA0iz7CMJRG/y2kVv86iz1HKo9AADF9Jzonjjv/K4k3/xmUPAA1gDJsM4ExsEeFPwU0jkIAMpRHADGX
        SgAxlUgAMpFEAC2SRAA4hjlvL5hK/yavZP8qlkz/AMZvACWMM8gtlkn/LIcz1CiNOQAxgzMAMYAwADSB
        MgAzj0IAMpRHAC+ZTABBaR4UUE8IDiyTQwAYn0oAKo9J8RuDQ/8ZaSr/HXkj1TCeTv8xmEz/LH4obiyL
        OQAxhjYANYIzADWBMwAzj0EAK5tNABrIeAAtpln1MJ9U4gjBXgBqMwAOKIUwuBJ+K/8Hgyb/KKBL/0as
        av8jkDf//wAAAS6LOQAviDcANYM1ADeBNAAwkEIANIY5gi2hVP8vo1j/KZ1R/xmVN+oKnzb/BKI0/xep
        RP9MuHP/W7mB/yCdQv8lgyqXJpU+AC2NOwAwijkANIg6AF2KUAAtkUIANIg71S6WSP80hz3jDZs49ACq
        N/8dsVH/YcOJ/3DGlf9CtWz/EKQ+/xmQMv8Cy2kALJNCAC+TRAAykkUANI5BADaKPQAwjT8ANog8bDaA
        NdojfiaeAK08/1TIhf+B0qf/Prxu/wmpP/8EpTf/FJM0/yCAMv8+k01EOo9EOCygUgAykkUAM45BADaJ
        PQAsk0AAJZxEABjeegAKoTi3a9Sb/1/PkP8BsEH/AKg2/w2hOv8elDfENm0mYySDOP0qo1b/K6te/zp6
        Lj4vlkkANI1AADaJPAAspE4AB/+XAACdMMZFyXz/W9GP/wCiMfcTkjbhJpRE+XAnABUQp0QAI5E8AADo
        hwAzk0bmKqpd/zKMPvsjqFgANYs+ADaJPABVwYAAAJIfngC2O/9h1pf/BrhL/wJiAD6uPFgQMppQ3SOh
        TQAqkj8ALI49AC6SRAA1iTxwMI0//zWHObMrlkcANYo9ADaIPAD///8Cd8iS/xrDYP8WxWH/ALQz/xx+
        IYUxolm6LaZZ/wD/2wAxkEIAMow+ADKOQAAipFQAN4E1OSGnVgAziz4ANYo9ADaIOwDBmbJVyLC+/7Hi
        0P+N3Lj/TcR5/xt1GGkukUP/LpRG/zSENpEwjkAANIo9ADSMPwA0iz4AM4s9ADSKPQA0ij0ANYk8ADeI
        OwDa//8AaKh/8Yffuv++zcn/07PG/wBxAAAqgS6IMoc5yURvJQ8ziz0ANIk8ADWJPQA0ij0ANIo9ADWJ
        PAA1iDsANoc7ADiHOwB9upkAWLFypXbPof9hoHDHdgVGH2CbbABFlVMAMZBDADOLPQAzijwANIg7ADaH
        OgA2iT0ANog7ADeHOgA4hTkAOYU5ADqEOABfqnMAB1IAEEmYVHnI8vwAd6KCAH2khABPklYAOIs/ADSJ
        PAA0iDsANYc6ADiFOQAziTsAM4k8ADKKPAAyijwAM4s9ADSQRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>